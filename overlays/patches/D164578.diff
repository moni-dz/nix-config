diff --git a/toolkit/xre/glxtest.cpp b/toolkit/xre/glxtest.cpp
--- a/toolkit/xre/glxtest.cpp
+++ b/toolkit/xre/glxtest.cpp
@@ -698,10 +698,19 @@
     eglTerminate(dpy);
     dlclose(libegl);
     return false;
   }
 
+#ifdef MOZ_WAYLAND
+  if (IsWaylandEnabled() && getenv("MOZ_GLX_TEST_EARLY_WL_ROUNDTRIP")) {
+    // On NVIDIA, calling wl_display_roundtrip after eglTerminate + dlclose
+    // causes it to crash. When MOZ_GLX_TEST_EARLY_WL_ROUNDTRIP is set
+    // in the environment we call wl_display_roundtrip early to avoid the crash
+    wl_display_roundtrip((wl_display*)native_dpy);
+  }
+#endif
+
   eglTerminate(dpy);
   dlclose(libegl);
   return true;
 }
 
@@ -958,13 +967,20 @@
 
   if (!get_egl_status((EGLNativeDisplayType)dpy)) {
     record_error("EGL test failed");
   }
 
-  // This is enough to crash some broken NVIDIA prime + Wayland setups, see
-  // https://github.com/NVIDIA/egl-wayland/issues/41 and bug 1768260.
-  wl_display_roundtrip(dpy);
+  if (!getenv("MOZ_GLX_TEST_EARLY_WL_ROUNDTRIP")) {
+    // We haven't already waited for all events
+
+    // This is enough to crash some broken NVIDIA prime + Wayland setups, see
+    // https://github.com/NVIDIA/egl-wayland/issues/41 and bug 1768260.
+    // In the meantime, before it gets properly addressed,
+    // specify the environment variable MOZ_GLX_TEST_EARLY_WL_ROUNDTRIP,
+    // to call wl_display_roundtrip before eglTerminate, which avoids the crash
+    wl_display_roundtrip(dpy);
+  }
 
   wl_display_disconnect(dpy);
   record_value("TEST_TYPE\nEGL\n");
 }
 

